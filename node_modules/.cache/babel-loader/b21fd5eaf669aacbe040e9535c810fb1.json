{"ast":null,"code":"var _jsxFileName = \"/home/geracros13/Escritorio/Proyectos ReactJS/Proyecto-citas/src/components/Formulario.js\";\nimport React, { Fragment, useState } from 'react';\nimport uuid from 'uuid/v4'; //Esta es la libreria que instalamos (npm uuid) para generar un id aleatorio\n\nimport PropTypes from 'prop-types';\n\nconst Formulario = ({\n  crearCita\n}) => {\n  //Crear State de Citas\n  const [cita, actualizarCita] = useState({\n    nom_paciente: '',\n    ape_paciente: '',\n    dpi_paciente: '',\n    fecha: '',\n    hora: '',\n    sintomas: ''\n  }); //Funcion que se ejecuta cada que el usuario escribe en un input\n\n  const actualizarState = e => {\n    actualizarCita({ ...cita,\n      [e.target.name]: e.target.value\n    });\n  }; //Extraer los valores de mi objeto y del formulario\n\n\n  const {\n    nom_paciente,\n    ape_paciente,\n    dpi_paciente,\n    fecha,\n    hora,\n    sintomas\n  } = cita; //Cuando se envie el form\n\n  const submitCita = e => {\n    e.preventDefault(); //Para prevenir el evento por defecto del form que antes enviava el form por el metodo get\n    //Asignar un ID\n\n    cita.id = uuid(); //Para que se me genere un id aleatorio\n    //Crear la cita\n\n    crearCita(cita); //Reiniciar el Form una vez enviado\n\n    actualizarCita({\n      nom_paciente: '',\n      ape_paciente: '',\n      dpi_paciente: '',\n      fecha: '',\n      hora: '',\n      sintomas: ''\n    }); //Para validar que solo me escriba numeros en DPI\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Crear Cita\"), React.createElement(\"form\", {\n    onSubmit: submitCita,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Datos del Paciente\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Nombres\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"nom_paciente\",\n    className: \"u-full-width\",\n    placeholder: \"Nombres\",\n    onChange: actualizarState,\n    value: nom_paciente,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Apellidos\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"ape_paciente\",\n    className: \"u-full-width\",\n    placeholder: \"Apellidos\",\n    onChange: actualizarState,\n    value: ape_paciente,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Documento de Identificaci\\xF3n\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"dpi_paciente\",\n    className: \"u-full-width\",\n    placeholder: \"DPI\",\n    onChange: actualizarState,\n    value: dpi_paciente,\n    pattern: \"{0,13}\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Datos de Ingreso\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Fecha de Ingreso\"), React.createElement(\"input\", {\n    type: \"date\",\n    name: \"fecha\",\n    className: \"u-full-width\",\n    onChange: actualizarState,\n    value: fecha,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Hora de Ingreso\"), React.createElement(\"input\", {\n    type: \"time\",\n    name: \"hora\",\n    className: \"u-full-width\",\n    onChange: actualizarState,\n    value: hora,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"S\\xEDntomas\"), React.createElement(\"textarea\", {\n    className: \"u-full-width\",\n    name: \"sintomas\",\n    onChange: actualizarState,\n    value: sintomas,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"u-full-width button-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Agregar Cita\")));\n};\n\nFormulario.propTypes = {\n  crearCita: PropTypes.func.isRequired\n};\nexport default Formulario;","map":{"version":3,"sources":["/home/geracros13/Escritorio/Proyectos ReactJS/Proyecto-citas/src/components/Formulario.js"],"names":["React","Fragment","useState","uuid","PropTypes","Formulario","crearCita","cita","actualizarCita","nom_paciente","ape_paciente","dpi_paciente","fecha","hora","sintomas","actualizarState","e","target","name","value","submitCita","preventDefault","id","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from 'react';\nimport uuid from 'uuid/v4'; //Esta es la libreria que instalamos (npm uuid) para generar un id aleatorio\nimport PropTypes from 'prop-types';\n\nconst Formulario = ({crearCita}) => {\n\n    //Crear State de Citas\n    const [cita, actualizarCita] = useState({\n        nom_paciente: '',\n        ape_paciente: '',\n        dpi_paciente: '',\n        fecha: '',\n        hora: '',\n        sintomas: ''\n    });\n\n    //Funcion que se ejecuta cada que el usuario escribe en un input\n    const actualizarState = e =>{\n        actualizarCita({\n            ...cita,\n            [e.target.name]: e.target.value\n        })\n    };\n\n\n    //Extraer los valores de mi objeto y del formulario\n    const { nom_paciente, ape_paciente, dpi_paciente, fecha, hora, sintomas } = cita;\n\n    //Cuando se envie el form\n    const submitCita = e =>{\n        e.preventDefault(); //Para prevenir el evento por defecto del form que antes enviava el form por el metodo get\n\n        //Asignar un ID\n        cita.id = uuid();//Para que se me genere un id aleatorio\n\n        //Crear la cita\n        crearCita(cita);\n\n        //Reiniciar el Form una vez enviado\n        actualizarCita({\n            nom_paciente: '',\n            ape_paciente: '',\n            dpi_paciente: '',\n            fecha: '',\n            hora: '',\n            sintomas: ''\n        });\n    \n    //Para validar que solo me escriba numeros en DPI\n    \n\n    }\n\n    return(\n        <Fragment>\n            <h2>Crear Cita</h2>\n\n            <form\n                onSubmit={submitCita}\n                autoComplete='off'\n            >\n                <h4>Datos del Paciente</h4>\n                <label>Nombres</label>\n                <input\n                    type=\"text\"\n                    name=\"nom_paciente\"\n                    className=\"u-full-width\"\n                    placeholder=\"Nombres\"\n                    onChange={actualizarState}\n                    value={nom_paciente}\n                    required\n                />\n                <label>Apellidos</label>\n                <input\n                    type=\"text\"\n                    name=\"ape_paciente\"\n                    className=\"u-full-width\"\n                    placeholder=\"Apellidos\"\n                    onChange={actualizarState}\n                    value={ape_paciente}\n                    required\n                />\n                <label>Documento de Identificación</label>\n                <input\n                    type=\"number\"\n                    name=\"dpi_paciente\"\n                    className=\"u-full-width\"\n                    placeholder=\"DPI\"\n                    onChange={actualizarState}\n                    value={dpi_paciente}\n                    pattern=\"{0,13}\"\n                    required\n\n                />\n                <h4>Datos de Ingreso</h4>\n                <label>Fecha de Ingreso</label>\n                <input\n                    type=\"date\"\n                    name=\"fecha\"\n                    className=\"u-full-width\"\n                    onChange={actualizarState}\n                    value={fecha}\n                    required\n                />\n                <label>Hora de Ingreso</label>\n                <input\n                    type=\"time\"\n                    name=\"hora\"\n                    className=\"u-full-width\"\n                    onChange={actualizarState}\n                    value={hora}\n                    required\n                />\n                <label>Síntomas</label>\n                <textarea\n                    className=\"u-full-width\"\n                    name=\"sintomas\"\n                    onChange={actualizarState}\n                    value={sintomas}\n                    required\n                ></textarea>\n\n                <button\n                    type=\"submit\"\n                    className=\"u-full-width button-primary\"\n                >Agregar Cita</button>\n\n            \n            </form>\n\n\n\n        </Fragment>\n    );\n}\n\nFormulario.propTypes = {\n    crearCita: PropTypes.func.isRequired\n}\n\nexport default Formulario;"]},"metadata":{},"sourceType":"module"}