{"ast":null,"code":"import _toConsumableArray from\"/home/geracros13/Escritorio/Proyectos ReactJS/proyecto-citas/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/geracros13/Escritorio/Proyectos ReactJS/proyecto-citas/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState,useEffect}from'react';import Formulario from'./components/Formulario';import Cita from'./components/Cita';function App(){//Citas en el local Storage\nvar citasIniciales=JSON.parse(localStorage.getItem('citas'));if(!citasIniciales){citasIniciales=[];}//Arreglo de todas las Citas para listarlas\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),citas=_useState2[0],guardarCitas=_useState2[1];//Use Effect para realizar ciertas operaciones cuando el state cambia\nuseEffect(function(){var citasIniciales=JSON.parse(localStorage.getItem('citas'));if(citasIniciales){localStorage.setItem('citas',JSON.stringify(citas));}else{localStorage.setItem('citas',JSON.stringify([]));}},[citas]);//Funcion que tome las citas actuales y agrege la nueva\nvar crearCita=function crearCita(cita){guardarCitas([].concat(_toConsumableArray(citas),[cita]));};//Funcion eliminar cita\nvar eliminarCita=function eliminarCita(id){var nuevasCitas=citas.filter(function(cita){return cita.id!==id;});//La razon por la que colocamos !== es para que me traiga todas las citas, menos la de ese id, y se elimina\nguardarCitas(nuevasCitas);};//Mensaje que aparecera cuando hay y cuando no hay citas\nvar titulo=citas.length===0?'No hay citas para hoy':'Adiministra tus Citas';return React.createElement(Fragment,null,React.createElement(\"h1\",null,\"Administrador de pacientes\"),React.createElement(\"div\",{className:\"container\"},React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"one-half column\"},React.createElement(Formulario,{crearCita:crearCita})),React.createElement(\"div\",{className:\"one-half column\"},React.createElement(\"h2\",null,titulo),citas.map(function(cita){return React.createElement(Cita,{key:cita.id,cita:cita,eliminarCita:eliminarCita});})))));}export default App;","map":{"version":3,"sources":["/home/geracros13/Escritorio/Proyectos ReactJS/proyecto-citas/src/App.js"],"names":["React","Fragment","useState","useEffect","Formulario","Cita","App","citasIniciales","JSON","parse","localStorage","getItem","citas","guardarCitas","setItem","stringify","crearCita","cita","eliminarCita","id","nuevasCitas","filter","titulo","length","map"],"mappings":"sSAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,QAAzB,CAAmCC,SAAnC,KAAmD,OAAnD,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CAEA,QAASC,CAAAA,GAAT,EAAe,CAEb;AACA,GAAIC,CAAAA,cAAc,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAArB,CACA,GAAI,CAACJ,cAAL,CAAqB,CACnBA,cAAc,CAAG,EAAjB,CACD,CAGD;AATa,cAUiBL,QAAQ,CAAC,EAAD,CAVzB,wCAUNU,KAVM,eAUCC,YAVD,eAab;AACAV,SAAS,CAAE,UAAM,CACf,GAAII,CAAAA,cAAc,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAArB,CACA,GAAIJ,cAAJ,CAAoB,CAClBG,YAAY,CAACI,OAAb,CAAqB,OAArB,CAA8BN,IAAI,CAACO,SAAL,CAAeH,KAAf,CAA9B,EACD,CAFD,IAEO,CACLF,YAAY,CAACI,OAAb,CAAqB,OAArB,CAA8BN,IAAI,CAACO,SAAL,CAAe,EAAf,CAA9B,EACD,CACF,CAPQ,CAON,CAACH,KAAD,CAPM,CAAT,CAWA;AACA,GAAMI,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,IAAI,CAAI,CACxBJ,YAAY,8BACPD,KADO,GAEVK,IAFU,GAAZ,CAID,CALD,CAOA;AACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,EAAE,CAAG,CACxB,GAAMC,CAAAA,WAAW,CAAGR,KAAK,CAACS,MAAN,CAAa,SAAAJ,IAAI,QAAIA,CAAAA,IAAI,CAACE,EAAL,GAAYA,EAAhB,EAAjB,CAApB,CAA0D;AAC1DN,YAAY,CAACO,WAAD,CAAZ,CACD,CAHD,CAKA;AACA,GAAME,CAAAA,MAAM,CAAGV,KAAK,CAACW,MAAN,GAAiB,CAAjB,CAAqB,uBAArB,CAA8C,uBAA7D,CAGA,MAEE,qBAAC,QAAD,MACE,2DADF,CAGE,2BAAK,SAAS,CAAC,WAAf,EACE,2BAAK,SAAS,CAAC,KAAf,EACE,2BAAK,SAAS,CAAC,iBAAf,EACE,oBAAC,UAAD,EACA,SAAS,CAAEP,SADX,EADF,CADF,CAME,2BAAK,SAAS,CAAC,iBAAf,EACE,8BAAKM,MAAL,CADF,CAEGV,KAAK,CAACY,GAAN,CAAU,SAAAP,IAAI,QACb,qBAAC,IAAD,EACE,GAAG,CAAGA,IAAI,CAACE,EADb,CAEE,IAAI,CAAEF,IAFR,CAGE,YAAY,CAAEC,YAHhB,EADa,EAAd,CAFH,CANF,CADF,CAHF,CAFF,CA8BD,CAED,cAAeZ,CAAAA,GAAf","sourcesContent":["import React, {Fragment, useState, useEffect} from 'react';\nimport Formulario from './components/Formulario'; \nimport Cita from './components/Cita';\n\nfunction App() {\n\n  //Citas en el local Storage\n  let citasIniciales = JSON.parse(localStorage.getItem('citas'));\n  if (!citasIniciales) {\n    citasIniciales = [];\n  }\n\n\n  //Arreglo de todas las Citas para listarlas\n  const [citas, guardarCitas] = useState([]);\n\n\n  //Use Effect para realizar ciertas operaciones cuando el state cambia\n  useEffect( () => {\n    let citasIniciales = JSON.parse(localStorage.getItem('citas'));\n    if (citasIniciales) {\n      localStorage.setItem('citas', JSON.stringify(citas))\n    } else {\n      localStorage.setItem('citas', JSON.stringify([]));\n    }\n  }, [citas] );\n\n\n\n  //Funcion que tome las citas actuales y agrege la nueva\n  const crearCita = cita => {\n    guardarCitas([\n      ...citas,\n      cita\n    ]);\n  };\n\n  //Funcion eliminar cita\n  const eliminarCita = id =>{\n    const nuevasCitas = citas.filter(cita => cita.id !== id );//La razon por la que colocamos !== es para que me traiga todas las citas, menos la de ese id, y se elimina\n    guardarCitas(nuevasCitas);\n  };\n\n  //Mensaje que aparecera cuando hay y cuando no hay citas\n  const titulo = citas.length === 0 ? 'No hay citas para hoy': 'Adiministra tus Citas';\n\n\n  return (\n\n    <Fragment>\n      <h1>Administrador de pacientes</h1>\n\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"one-half column\">\n            <Formulario\n            crearCita={crearCita}\n            />\n          </div> \n          <div className=\"one-half column\">\n            <h2>{titulo}</h2>\n            {citas.map(cita => (\n              <Cita\n                key= {cita.id}\n                cita={cita}\n                eliminarCita={eliminarCita}\n              />\n            ))}\n\n          </div>\n        </div>\n      </div>\n\n\n    </Fragment>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}