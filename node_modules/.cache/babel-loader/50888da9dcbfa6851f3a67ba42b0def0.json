{"ast":null,"code":"var _jsxFileName = \"/home/geracros13/Escritorio/Proyectos ReactJS/proyecto-citas/src/components/Formulario.js\";\nimport React, { Fragment, useState } from 'react';\nimport uuid from 'uuid/v4'; //Esta es la libreria que instalamos (npm uuid) para generar un id aleatorio\n\nconst Formulario = () => {\n  //Crear State de Citas\n  const [cita, actualizarCita] = useState({\n    nom_paciente: '',\n    ape_paciente: '',\n    dpi_paciente: '',\n    fecha: '',\n    hora: '',\n    sintomas: ''\n  }); //Crear State para validar los inputs\n\n  const [error, actualizarError] = useState(false); //Funcion que se ejecuta cada que el usuario escribe en un input\n\n  const actualizarState = e => {\n    actualizarCita({ ...cita,\n      [e.target.name]: e.target.value\n    });\n  }; //Extraer los valores de mi objeto y del formulario\n\n\n  const {\n    nom_paciente,\n    ape_paciente,\n    dpi_paciente,\n    fecha,\n    hora,\n    sintomas\n  } = cita; //Cuando se envie el form\n\n  const submitCita = e => {\n    e.preventDefault(); //Para prevenir el evento por defecto del form que antes enviava el form por el metodo get\n    //Validar si el usuario ingreso valores en todos los inputs\n\n    if (nom_paciente.trim() === '' || ape_paciente.trim() === '' || dpi_paciente.trim() === '' || fecha.trim() === '' || hora.trim() === '' || sintomas.trim() === '') {\n      actualizarError(true);\n      return;\n    } //Eliminar el mensaje de error si el usuario queria enviar un input vacio\n\n\n    actualizarError(false); //Asignar un ID\n\n    cita.id = uuid(); //Para que se me genere un id aleatorio\n    //Crear la cita\n    //Reiniciar el Form una vez enviado\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Crear Cita\"), error ? React.createElement(\"p\", {\n    className: \"alerta-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Todos los campos son obligatorios :(\") : null, React.createElement(\"form\", {\n    onSubmit: submitCita,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Datos del Paciente\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Nombres\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"nom_paciente\",\n    className: \"u-full-width\",\n    placeholder: \"Nombres\",\n    onChange: actualizarState,\n    value: nom_paciente,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Apellidos\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"ape_paciente\",\n    className: \"u-full-width\",\n    placeholder: \"Apellidos\",\n    onChange: actualizarState,\n    value: ape_paciente,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Documento de Identificaci\\xF3n\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"dpi_paciente\",\n    className: \"u-full-width\",\n    placeholder: \"DPI\",\n    onChange: actualizarState,\n    value: dpi_paciente,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Datos de Ingreso\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Fecha de Ingreso\"), React.createElement(\"input\", {\n    type: \"date\",\n    name: \"fecha\",\n    className: \"u-full-width\",\n    onChange: actualizarState,\n    value: fecha,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Hora de Ingreso\"), React.createElement(\"input\", {\n    type: \"time\",\n    name: \"hora\",\n    className: \"u-full-width\",\n    onChange: actualizarState,\n    value: hora,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"S\\xEDntomas\"), React.createElement(\"textarea\", {\n    className: \"u-full-width\",\n    name: \"sintomas\",\n    onChange: actualizarState,\n    value: sintomas,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"u-full-width button-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Agregar Cita\")));\n};\n\nexport default Formulario;","map":{"version":3,"sources":["/home/geracros13/Escritorio/Proyectos ReactJS/proyecto-citas/src/components/Formulario.js"],"names":["React","Fragment","useState","uuid","Formulario","cita","actualizarCita","nom_paciente","ape_paciente","dpi_paciente","fecha","hora","sintomas","error","actualizarError","actualizarState","e","target","name","value","submitCita","preventDefault","trim","id"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from 'react';\nimport uuid from 'uuid/v4'; //Esta es la libreria que instalamos (npm uuid) para generar un id aleatorio\n\nconst Formulario = () => {\n\n    //Crear State de Citas\n    const [cita, actualizarCita] = useState({\n        nom_paciente: '',\n        ape_paciente: '',\n        dpi_paciente: '',\n        fecha: '',\n        hora: '',\n        sintomas: ''\n    });\n\n    //Crear State para validar los inputs\n    const [error, actualizarError] = useState(false);\n\n\n    //Funcion que se ejecuta cada que el usuario escribe en un input\n    const actualizarState = e =>{\n        actualizarCita({\n            ...cita,\n            [e.target.name]: e.target.value\n        })\n    };\n\n\n    //Extraer los valores de mi objeto y del formulario\n    const { nom_paciente, ape_paciente, dpi_paciente, fecha, hora, sintomas } = cita;\n\n    //Cuando se envie el form\n    const submitCita = e =>{\n        e.preventDefault(); //Para prevenir el evento por defecto del form que antes enviava el form por el metodo get\n\n        //Validar si el usuario ingreso valores en todos los inputs\n        if (nom_paciente.trim() === '' || ape_paciente.trim() === '' || dpi_paciente.trim() === '' || fecha.trim() === '' ||\n         hora.trim() === '' || sintomas.trim() === '') {\n            actualizarError(true);\n            return;\n            \n        }\n\n        //Eliminar el mensaje de error si el usuario queria enviar un input vacio\n        actualizarError(false);\n\n        //Asignar un ID\n        cita.id = uuid();//Para que se me genere un id aleatorio\n        \n        //Crear la cita\n\n        //Reiniciar el Form una vez enviado\n\n\n\n\n    } \n\n    return(\n        <Fragment>\n            <h2>Crear Cita</h2>\n\n            {error ? <p className=\"alerta-error\">Todos los campos son obligatorios :(</p>: null}\n\n            <form\n                onSubmit={submitCita}\n            >\n                <h4>Datos del Paciente</h4>\n                <label>Nombres</label>\n                <input\n                    type=\"text\"\n                    name=\"nom_paciente\"\n                    className=\"u-full-width\"\n                    placeholder=\"Nombres\"\n                    onChange={actualizarState}\n                    value={nom_paciente}\n                />\n                <label>Apellidos</label>\n                <input\n                    type=\"text\"\n                    name=\"ape_paciente\"\n                    className=\"u-full-width\"\n                    placeholder=\"Apellidos\"\n                    onChange={actualizarState}\n                    value={ape_paciente}\n                />\n                <label>Documento de Identificación</label>\n                <input\n                    type=\"text\"\n                    name=\"dpi_paciente\"\n                    className=\"u-full-width\"\n                    placeholder=\"DPI\"\n                    onChange={actualizarState}\n                    value={dpi_paciente}\n                />\n                <h4>Datos de Ingreso</h4>\n                <label>Fecha de Ingreso</label>\n                <input\n                    type=\"date\"\n                    name=\"fecha\"\n                    className=\"u-full-width\"\n                    onChange={actualizarState}\n                    value={fecha}\n                />\n                <label>Hora de Ingreso</label>\n                <input\n                    type=\"time\"\n                    name=\"hora\"\n                    className=\"u-full-width\"\n                    onChange={actualizarState}\n                    value={hora}\n                />\n                <label>Síntomas</label>\n                <textarea\n                    className=\"u-full-width\"\n                    name=\"sintomas\"\n                    onChange={actualizarState}\n                    value={sintomas}\n                ></textarea>\n\n                <button\n                    type=\"submit\"\n                    className=\"u-full-width button-primary\"\n                >Agregar Cita</button>\n\n            \n            </form>\n\n\n\n        </Fragment>\n    );\n}\n\n\nexport default Formulario;"]},"metadata":{},"sourceType":"module"}