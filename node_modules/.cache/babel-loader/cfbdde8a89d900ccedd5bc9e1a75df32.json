{"ast":null,"code":"var _jsxFileName = \"/home/geracros13/Escritorio/Proyectos ReactJS/proyecto-citas/src/App.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport Formulario from './components/Formulario';\nimport Cita from './components/Cita';\n\nfunction App() {\n  //Citas en el local Storage\n  const citasIniciales = JSON.parse(localStorage.getItem('citas'));\n\n  if (!citasIniciales) {\n    citasIniciales = [];\n  } //Use Effect para realizar ciertas operaciones cuando el state cambia\n\n\n  useEffect(() => {\n    if (citasIniciales) {\n      localStorage.setItem('citas', JSON.stringify(citas));\n    } else {\n      localStorage.setItem('citas', JSON.stringify([]));\n    }\n  }, [citas]); //Arreglo de todas las Citas para listarlas\n\n  const [citas, guardarCitas] = useState([]); //Funcion que tome las citas actuales y agrege la nueva\n\n  const crearCita = cita => {\n    guardarCitas([...citas, cita]);\n  }; //Funcion eliminar cita\n\n\n  const eliminarCita = id => {\n    const nuevasCitas = citas.filter(cita => cita.id !== id); //La razon por la que colocamos !== es para que me traiga todas las citas, menos la de ese id, y se elimina\n\n    guardarCitas(nuevasCitas);\n  }; //Mensaje que aparecera cuando hay y cuando no hay citas\n\n\n  const titulo = citas.length === 0 ? 'No hay citas para hoy' : 'Adiministra tus Citas';\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Administrador de pacientes\"), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"one-half column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Formulario, {\n    crearCita: crearCita,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"one-half column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, titulo), citas.map(cita => React.createElement(Cita, {\n    key: cita.id,\n    cita: cita,\n    eliminarCita: eliminarCita,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/geracros13/Escritorio/Proyectos ReactJS/proyecto-citas/src/App.js"],"names":["React","Fragment","useState","useEffect","Formulario","Cita","App","citasIniciales","JSON","parse","localStorage","getItem","setItem","stringify","citas","guardarCitas","crearCita","cita","eliminarCita","id","nuevasCitas","filter","titulo","length","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,EAAmCC,SAAnC,QAAmD,OAAnD;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,SAASC,GAAT,GAAe;AAEb;AACA,QAAMC,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAvB;;AACA,MAAI,CAACJ,cAAL,EAAqB;AACnBA,IAAAA,cAAc,GAAG,EAAjB;AACD,GANY,CAQb;;;AACAJ,EAAAA,SAAS,CAAE,MAAM;AACf,QAAII,cAAJ,EAAoB;AAClBG,MAAAA,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA8BJ,IAAI,CAACK,SAAL,CAAeC,KAAf,CAA9B;AACD,KAFD,MAEO;AACLJ,MAAAA,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA8BJ,IAAI,CAACK,SAAL,CAAe,EAAf,CAA9B;AACD;AACF,GANQ,EAMN,CAACC,KAAD,CANM,CAAT,CATa,CAmBb;;AACA,QAAM,CAACA,KAAD,EAAQC,YAAR,IAAwBb,QAAQ,CAAC,EAAD,CAAtC,CApBa,CAsBb;;AACA,QAAMc,SAAS,GAAGC,IAAI,IAAI;AACxBF,IAAAA,YAAY,CAAC,CACX,GAAGD,KADQ,EAEXG,IAFW,CAAD,CAAZ;AAID,GALD,CAvBa,CA8Bb;;;AACA,QAAMC,YAAY,GAAGC,EAAE,IAAG;AACxB,UAAMC,WAAW,GAAGN,KAAK,CAACO,MAAN,CAAaJ,IAAI,IAAIA,IAAI,CAACE,EAAL,KAAYA,EAAjC,CAApB,CADwB,CACkC;;AAC1DJ,IAAAA,YAAY,CAACK,WAAD,CAAZ;AACD,GAHD,CA/Ba,CAoCb;;;AACA,QAAME,MAAM,GAAGR,KAAK,CAACS,MAAN,KAAiB,CAAjB,GAAqB,uBAArB,GAA8C,uBAA7D;AAGA,SAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAGE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACA,IAAA,SAAS,EAAEP,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAME;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKM,MAAL,CADF,EAEGR,KAAK,CAACU,GAAN,CAAUP,IAAI,IACb,oBAAC,IAAD;AACE,IAAA,GAAG,EAAGA,IAAI,CAACE,EADb;AAEE,IAAA,IAAI,EAAEF,IAFR;AAGE,IAAA,YAAY,EAAEC,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFH,CANF,CADF,CAHF,CAFF;AA8BD;;AAED,eAAeZ,GAAf","sourcesContent":["import React, {Fragment, useState, useEffect} from 'react';\nimport Formulario from './components/Formulario'; \nimport Cita from './components/Cita';\n\nfunction App() {\n\n  //Citas en el local Storage\n  const citasIniciales = JSON.parse(localStorage.getItem('citas'));\n  if (!citasIniciales) {\n    citasIniciales = [];\n  }\n\n  //Use Effect para realizar ciertas operaciones cuando el state cambia\n  useEffect( () => {\n    if (citasIniciales) {\n      localStorage.setItem('citas', JSON.stringify(citas))\n    } else {\n      localStorage.setItem('citas', JSON.stringify([]));\n    }\n  }, [citas] );\n\n\n\n  //Arreglo de todas las Citas para listarlas\n  const [citas, guardarCitas] = useState([]);\n\n  //Funcion que tome las citas actuales y agrege la nueva\n  const crearCita = cita => {\n    guardarCitas([\n      ...citas,\n      cita\n    ]);\n  };\n\n  //Funcion eliminar cita\n  const eliminarCita = id =>{\n    const nuevasCitas = citas.filter(cita => cita.id !== id );//La razon por la que colocamos !== es para que me traiga todas las citas, menos la de ese id, y se elimina\n    guardarCitas(nuevasCitas);\n  };\n\n  //Mensaje que aparecera cuando hay y cuando no hay citas\n  const titulo = citas.length === 0 ? 'No hay citas para hoy': 'Adiministra tus Citas';\n\n\n  return (\n\n    <Fragment>\n      <h1>Administrador de pacientes</h1>\n\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"one-half column\">\n            <Formulario\n            crearCita={crearCita}\n            />\n          </div> \n          <div className=\"one-half column\">\n            <h2>{titulo}</h2>\n            {citas.map(cita => (\n              <Cita\n                key= {cita.id}\n                cita={cita}\n                eliminarCita={eliminarCita}\n              />\n            ))}\n\n          </div>\n        </div>\n      </div>\n\n\n    </Fragment>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}